{"ast":null,"code":"var _jsxFileName = \"/home/tanisha/Desktop/announcement-page/src/components/login.js\";\n// import React, {useState} from 'react'\nimport React from 'react';\nimport { connect } from \"react-redux\"; // import {LoginAction} from '../actions'\n\nimport { Navigate } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      mailError: '',\n      pwdError: false,\n      loginErr: ''\n    };\n    this.handleForm = this.handleForm.bind(this);\n    this.setformData = this.setformData.bind(this);\n  } // handleForm(event){\n  //   let validate = true;\n  //   event.preventDefault();\n  //   if(this.state.password === ''){\n  //     validate = false;\n  //     this.setState({\n  //       pwdError: true\n  //     })\n  //   }\n  //   if(this.state.email === ''){\n  //     validate = false;\n  //     this.setState({\n  //       mailError:<p style={{color:'red'}}>email field cannot be empty.</p>\n  //     })\n  //   }\n  //   if(!this.state.email.match(/^[A-Za-z0-9+-._]+@[A-Za-z0-9]+\\.[a-zA-Z]+$/)){\n  //     validate = false;\n  //     this.setState({\n  //       mailError:<p style={{color:'red'}}>Invalid email. Please enter valid email.</p>\n  //     })\n  //   }\n  //   if(validate){\n  //     // this.props.LoginAction(this.state.email,this.state.password);\n  //   }\n  // }\n  // setformData(e,value){\n  //   this.setState({\n  //     pwdError:false,\n  //     mailError:''\n  //   })\n  //   if(value === 'pwd'){\n  //     this.setState({\n  //       password: e.target.value\n  //     })}\n  //   else{\n  //     console.log(e.target.value)\n  //     this.setState({\n  //       email: e.target.value\n  //     })\n  //   }\n  //   return;\n  // }\n  // componentDidUpdate(prevState, prevProps){\n  //   if(this.props.isAthenticated){\n  //     window.location.href = '/shop'\n  //   }\n  //   if(this.props.loginStatus){\n  //     if(this.props.loginText === 'invalid'){\n  //       this.setState({\n  //         loginErr: 'email or password is incorrect.'\n  //       })\n  //     }\n  //     else{\n  //       this.setState({\n  //         loginErr: 'email does not exist.'\n  //       })\n  //     }\n  //   }\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"form-control\",\n            id: \"email1\",\n            placeholder: \"Enter your email address\",\n            onChange: e => this.setformData(e, 'email')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-control\",\n            id: \"password1\",\n            placeholder: \"Enter your password\",\n            autoComplete: \"off\",\n            onChange: e => this.setformData(e, 'pwd')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) //     <>\n    //     <div id=\"appCapsule\" className=\"pt-0\">\n    //       <div className=\"login-form mt-1\">\n    //         <div className=\"section mt-1\">\n    //           {/* <h1>Get started</h1> */}\n    //           <h4>Log in</h4>\n    //         </div>\n    //         <div className=\"section mt-1 mb-5\">\n    //           <form>\n    //             <div className=\"form-group boxed\">\n    //               <div className=\"input-wrapper\">\n    //                 <input\n    //                   type=\"email\"\n    //                   className=\"form-control\"\n    //                   id=\"email1\"\n    //                   placeholder=\"Enter your email address\"\n    //                   onChange={e=>this.setformData(e,'email')}\n    //                 />\n    //                 <i className=\"clear-input\">\n    //                   <ion-icon name=\"close-circle\" />\n    //                 </i>\n    //               </div>\n    //               {this.state.mailError}\n    //             </div>\n    //             <div className=\"form-group boxed\">\n    //               <div className=\"input-wrapper\">\n    //                 <input\n    //                   type=\"password\"\n    //                   className=\"form-control\"\n    //                   id=\"password1\"\n    //                   placeholder=\"Enter your password\"\n    //                   autoComplete=\"off\"\n    //                   onChange={e=>this.setformData(e,'pwd')}\n    //                 />\n    //                 {/* <i className=\"clear-input\">\n    //                   <ion-icon name=\"close-circle\" />\n    //                 </i> */}\n    //               </div>\n    //               {this.state.pwdError && <p style={{color:'red'}}>Passsword field cannot be empty</p>}\n    //             </div>\n    //             {/* <div className=\"form-links mt-2\">\n    //               <div>\n    //                 <a href=\"/shop/register\">Register Now</a>\n    //               </div>\n    //               <div>\n    //                 <a href=\"/shop/forgot-password\" className=\"text-muted\">\n    //                   Forgot Password?\n    //                 </a>\n    //               </div>\n    //             </div> */}\n    //             {console.log(this.props.isAuthenticated, this.props.loginText)}\n    //             {this.state.loginErr}\n    //             {this.props.isAuthenticated?<Navigate to ='/anouncement-page'/>\n    //               :this.props.loginText === 'invalid'?<p style={{color:'red'}}>email or password incorrect.</p>\n    //               :this.props.loginText===\"not_exist\"?<p style={{color:'red'}}>email does not exists.</p>:''\n    //             }\n    //             <div className=\"form-button-group\">\n    //               <button type=\"submit\" className=\"btn btn-primary btn-block btn-lg\" onClick={this.handleForm}>\n    //                 Log in\n    //               </button>\n    //             </div>\n    //           </form>\n    //         </div>\n    //       </div>\n    //     </div>\n    //   </>\n    ;\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  //   loginStatus: state.loginStatus,\n  //   loginText: state.loginText,\n  isAuthenticated: state.isAuthenticated\n});\n\nconst mapDisparchToProps = dispatch => ({//   LoginAction : (email,pwd) => dispatch(LoginAction(email,pwd))\n});\n\nexport default connect(mapStateToProps, mapDisparchToProps)(Login);","map":{"version":3,"names":["React","connect","Navigate","Login","Component","constructor","props","state","email","password","mailError","pwdError","loginErr","handleForm","bind","setformData","render","e","mapStateToProps","isAuthenticated","mapDisparchToProps","dispatch"],"sources":["/home/tanisha/Desktop/announcement-page/src/components/login.js"],"sourcesContent":["// import React, {useState} from 'react'\nimport React from 'react'\nimport {connect} from \"react-redux\";\n// import {LoginAction} from '../actions'\nimport { Navigate } from 'react-router';\nclass Login extends React.Component\n{\n    constructor(props){\n      super(props)\n      this.state = {\n        email:'',\n        password:'',\n        mailError:'',\n        pwdError:false,\n        loginErr:''\n      }\n      this.handleForm = this.handleForm.bind(this);\n      this.setformData = this.setformData.bind(this)\n    }\n    // handleForm(event){\n    //   let validate = true;\n    //   event.preventDefault();\n    //   if(this.state.password === ''){\n    //     validate = false;\n    //     this.setState({\n    //       pwdError: true\n    //     })\n    //   }\n    //   if(this.state.email === ''){\n    //     validate = false;\n    //     this.setState({\n    //       mailError:<p style={{color:'red'}}>email field cannot be empty.</p>\n    //     })\n    //   }\n    //   if(!this.state.email.match(/^[A-Za-z0-9+-._]+@[A-Za-z0-9]+\\.[a-zA-Z]+$/)){\n    //     validate = false;\n    //     this.setState({\n    //       mailError:<p style={{color:'red'}}>Invalid email. Please enter valid email.</p>\n    //     })\n    //   }\n    //   if(validate){\n    //     // this.props.LoginAction(this.state.email,this.state.password);\n    //   }\n    // }\n    // setformData(e,value){\n    //   this.setState({\n    //     pwdError:false,\n    //     mailError:''\n    //   })\n    //   if(value === 'pwd'){\n    //     this.setState({\n    //       password: e.target.value\n    //     })}\n    //   else{\n    //     console.log(e.target.value)\n    //     this.setState({\n    //       email: e.target.value\n    //     })\n    //   }\n    //   return;\n    // }\n    // componentDidUpdate(prevState, prevProps){\n    //   if(this.props.isAthenticated){\n    //     window.location.href = '/shop'\n    //   }\n    //   if(this.props.loginStatus){\n    //     if(this.props.loginText === 'invalid'){\n    //       this.setState({\n    //         loginErr: 'email or password is incorrect.'\n    //       })\n    //     }\n    //     else{\n    //       this.setState({\n    //         loginErr: 'email does not exist.'\n    //       })\n    //     }\n    //   }\n    // }\n    render()\n    {\n        return (\n            <><div>\n                <h3>Log in</h3>\n            </div>\n            <form>\n                <div>\n                <input\n                          type=\"email\"\n                          className=\"form-control\"\n                          id=\"email1\"\n                          placeholder=\"Enter your email address\"\n                          onChange={e=>this.setformData(e,'email')}\n                        />\n                </div>\n                <div>\n                <input\n                          type=\"password\"\n                          className=\"form-control\"\n                          id=\"password1\"\n                          placeholder=\"Enter your password\"\n                          autoComplete=\"off\"\n                          onChange={e=>this.setformData(e,'pwd')}\n                        />\n                </div>\n            </form>\n            </>\n        //     <>\n        //     <div id=\"appCapsule\" className=\"pt-0\">\n        //       <div className=\"login-form mt-1\">\n        //         <div className=\"section mt-1\">\n        //           {/* <h1>Get started</h1> */}\n        //           <h4>Log in</h4>\n        //         </div>\n        //         <div className=\"section mt-1 mb-5\">\n        //           <form>\n        //             <div className=\"form-group boxed\">\n        //               <div className=\"input-wrapper\">\n        //                 <input\n        //                   type=\"email\"\n        //                   className=\"form-control\"\n        //                   id=\"email1\"\n        //                   placeholder=\"Enter your email address\"\n        //                   onChange={e=>this.setformData(e,'email')}\n        //                 />\n        //                 <i className=\"clear-input\">\n        //                   <ion-icon name=\"close-circle\" />\n        //                 </i>\n        //               </div>\n        //               {this.state.mailError}\n        //             </div>\n        //             <div className=\"form-group boxed\">\n        //               <div className=\"input-wrapper\">\n        //                 <input\n        //                   type=\"password\"\n        //                   className=\"form-control\"\n        //                   id=\"password1\"\n        //                   placeholder=\"Enter your password\"\n        //                   autoComplete=\"off\"\n        //                   onChange={e=>this.setformData(e,'pwd')}\n        //                 />\n        //                 {/* <i className=\"clear-input\">\n        //                   <ion-icon name=\"close-circle\" />\n        //                 </i> */}\n        //               </div>\n        //               {this.state.pwdError && <p style={{color:'red'}}>Passsword field cannot be empty</p>}\n        //             </div>\n        //             {/* <div className=\"form-links mt-2\">\n        //               <div>\n        //                 <a href=\"/shop/register\">Register Now</a>\n        //               </div>\n        //               <div>\n        //                 <a href=\"/shop/forgot-password\" className=\"text-muted\">\n        //                   Forgot Password?\n        //                 </a>\n        //               </div>\n        //             </div> */}\n        //             {console.log(this.props.isAuthenticated, this.props.loginText)}\n        //             {this.state.loginErr}\n        //             {this.props.isAuthenticated?<Navigate to ='/anouncement-page'/>\n        //               :this.props.loginText === 'invalid'?<p style={{color:'red'}}>email or password incorrect.</p>\n        //               :this.props.loginText===\"not_exist\"?<p style={{color:'red'}}>email does not exists.</p>:''\n        //             }\n                    \n        //             <div className=\"form-button-group\">\n        //               <button type=\"submit\" className=\"btn btn-primary btn-block btn-lg\" onClick={this.handleForm}>\n        //                 Log in\n        //               </button>\n        //             </div>\n        //           </form>\n        //         </div>\n        //       </div>\n        //     </div>\n        //   </>\n        )\n    }\n}\nconst mapStateToProps = state => ({\n//   loginStatus: state.loginStatus,\n//   loginText: state.loginText,\n  isAuthenticated: state.isAuthenticated\n})\nconst mapDisparchToProps = (dispatch) =>({\n//   LoginAction : (email,pwd) => dispatch(LoginAction(email,pwd))\n})\nexport default connect(mapStateToProps, mapDisparchToProps)(Login);\n"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CACA;;AACA,SAASC,QAAT,QAAyB,cAAzB;;;;AACA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CACA;EACIC,WAAW,CAACC,KAAD,EAAO;IAChB,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACXC,KAAK,EAAC,EADK;MAEXC,QAAQ,EAAC,EAFE;MAGXC,SAAS,EAAC,EAHC;MAIXC,QAAQ,EAAC,KAJE;MAKXC,QAAQ,EAAC;IALE,CAAb;IAOA,KAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;IACA,KAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;EACD,CAZL,CAaI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EACAE,MAAM,GACN;IACI,oBACI;MAAA,wBAAE;QAAA,uBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAAF,eAGA;QAAA,wBACI;UAAA,uBACA;YACU,IAAI,EAAC,OADf;YAEU,SAAS,EAAC,cAFpB;YAGU,EAAE,EAAC,QAHb;YAIU,WAAW,EAAC,0BAJtB;YAKU,QAAQ,EAAEC,CAAC,IAAE,KAAKF,WAAL,CAAiBE,CAAjB,EAAmB,OAAnB;UALvB;YAAA;YAAA;YAAA;UAAA;QADA;UAAA;UAAA;UAAA;QAAA,QADJ,eAUI;UAAA,uBACA;YACU,IAAI,EAAC,UADf;YAEU,SAAS,EAAC,cAFpB;YAGU,EAAE,EAAC,WAHb;YAIU,WAAW,EAAC,qBAJtB;YAKU,YAAY,EAAC,KALvB;YAMU,QAAQ,EAAEA,CAAC,IAAE,KAAKF,WAAL,CAAiBE,CAAjB,EAAmB,KAAnB;UANvB;YAAA;YAAA;YAAA;UAAA;QADA;UAAA;UAAA;UAAA;QAAA,QAVJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAHA;IAAA,gBADJ,CA0BA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IA5FA;EA8FH;;AAxKL;;AA0KA,MAAMC,eAAe,GAAGX,KAAK,KAAK;EAClC;EACA;EACEY,eAAe,EAAEZ,KAAK,CAACY;AAHS,CAAL,CAA7B;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,KAAc,CACzC;AADyC,CAAd,CAA3B;;AAGA,eAAepB,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CjB,KAA7C,CAAf"},"metadata":{},"sourceType":"module"}