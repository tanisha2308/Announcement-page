{"ast":null,"code":"var _jsxFileName = \"/home/tanisha/Desktop/announcement-page/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // import { Route, BrowserRouter , Routes} from 'react-router-dom';\n\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 3\n}, this)); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals(); // import React from 'react';\n// import ReactDOM from 'react-dom';\n// /* import './index.css'; */\n// /* import App from './App'; */\n// import blogger from './blogger' \n// import * as serviceWorker from './serviceWorker';\n// import { Route, BrowserRouter , Routes ,Redirect } from 'react-router-dom';\n// import '../node_modules/font-awesome/css/font-awesome.min.css'; \n// /* import \"./App_pinkTheme.css\";\n// import \"./theme/cf-elemet-theme/index.css\"; */\n// import reducer from \"./reducers\"\n// import { createStore, applyMiddleware} from \"redux\";\n// import {Provider} from 'react-redux';\n// import { i18n } from 'element-react';\n// import locale from 'element-react/src/locale/lang/en';\n// import ReduxThunk from 'redux-thunk';\n// import { persistStore, persistReducer } from 'redux-persist' // imports from redux-persist\n// import storage from 'redux-persist/lib/storage'\n// import { PersistGate } from 'redux-persist/integration/react'\n// i18n.use(locale);\n// const persistConfig = { // configuration object for redux-persist\n//   key: 'root',\n//   storage, // define which storage to use\n//   whitelist: ['user','isAuthenticated','bloggerInfo','isUserAuthenticated','endUserProfile','isCuratorAuthenticated','hasUserFilledPreferences']\n// }\n// const persistedReducer = persistReducer(persistConfig, reducer)\n// const store = createStore(persistedReducer,\n//     applyMiddleware(ReduxThunk)\n//   )\n//   const  persistor = persistStore(store);\n// const routing = (\n//   <BrowserRouter>\n//     <Routes>\n//     <Route exact path=\"/\" component={Login} />\n//           <Route exact path=\"/anouncement-page\" component={Announcement_page} />\n//     </Routes>\n//   </BrowserRouter>\n// )\n// ReactDOM.render(\n//   <Provider store={store}>\n//     <PersistGate loading={null} persistor={persistor}>\n//         {routing}\n//       </PersistGate>\n//   </Provider>, document.getElementById('root'));\n// // ReactDOM.render(routing, document.getElementById('root'));\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","root","createRoot","document","getElementById","render"],"sources":["/home/tanisha/Desktop/announcement-page/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n// import { Route, BrowserRouter , Routes} from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// /* import './index.css'; */\n// /* import App from './App'; */\n// import blogger from './blogger' \n// import * as serviceWorker from './serviceWorker';\n// import { Route, BrowserRouter , Routes ,Redirect } from 'react-router-dom';\n// import '../node_modules/font-awesome/css/font-awesome.min.css'; \n// /* import \"./App_pinkTheme.css\";\n// import \"./theme/cf-elemet-theme/index.css\"; */\n// import reducer from \"./reducers\"\n// import { createStore, applyMiddleware} from \"redux\";\n// import {Provider} from 'react-redux';\n// import { i18n } from 'element-react';\n// import locale from 'element-react/src/locale/lang/en';\n// import ReduxThunk from 'redux-thunk';\n// import { persistStore, persistReducer } from 'redux-persist' // imports from redux-persist\n// import storage from 'redux-persist/lib/storage'\n// import { PersistGate } from 'redux-persist/integration/react'\n\n// i18n.use(locale);\n// const persistConfig = { // configuration object for redux-persist\n//   key: 'root',\n//   storage, // define which storage to use\n//   whitelist: ['user','isAuthenticated','bloggerInfo','isUserAuthenticated','endUserProfile','isCuratorAuthenticated','hasUserFilledPreferences']\n// }\n// const persistedReducer = persistReducer(persistConfig, reducer)\n// const store = createStore(persistedReducer,\n//     applyMiddleware(ReduxThunk)\n//   )\n//   const  persistor = persistStore(store);\n\n\n// const routing = (\n//   <BrowserRouter>\n//     <Routes>\n//     <Route exact path=\"/\" component={Login} />\n//           <Route exact path=\"/anouncement-page\" component={Announcement_page} />\n//     </Routes>\n//   </BrowserRouter>\n  \n// )\n// ReactDOM.render(\n//   <Provider store={store}>\n//     <PersistGate loading={null} persistor={persistor}>\n//         {routing}\n//       </PersistGate>\n//   </Provider>, document.getElementById('root'));\n\n// // ReactDOM.render(routing, document.getElementById('root'));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();\n\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,sCAAP,C,CACA;;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,MAAMC,IAAI,GAAGH,QAAQ,CAACI,UAAT,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB,CAAb;AACAH,IAAI,CAACI,MAAL,eACE,QAAC,KAAD,CAAO,UAAP;EAAA,uBACE,QAAC,GAAD;IAAA;IAAA;IAAA;EAAA;AADF;EAAA;EAAA;EAAA;AAAA,QADF,E,CAQA;AACA;AACA;;AACAL,eAAe,G,CAIf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}