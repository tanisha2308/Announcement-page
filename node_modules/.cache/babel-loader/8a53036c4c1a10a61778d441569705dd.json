{"ast":null,"code":"var _jsxFileName = \"/home/tanisha/Desktop/announcement-page/src/components/login.js\";\n// import React, {useState} from 'react'\nimport React from 'react'; // import {connect} from \"react-redux\";\n// import {LoginAction} from '../actions'\n// import { Navigate } from 'react-router';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      mailError: '',\n      pwdError: false,\n      loginErr: ''\n    }; // this.handleForm = this.handleForm.bind(this);\n    // this.setformData = this.setformData.bind(this)\n  } // handleForm(event){\n  //   let validate = true;\n  //   event.preventDefault();\n  //   if(this.state.password === ''){\n  //     validate = false;\n  //     this.setState({\n  //       pwdError: true\n  //     })\n  //   }\n  //   if(this.state.email === ''){\n  //     validate = false;\n  //     this.setState({\n  //       mailError:<p style={{color:'red'}}>email field cannot be empty.</p>\n  //     })\n  //   }\n  //   if(!this.state.email.match(/^[A-Za-z0-9+-._]+@[A-Za-z0-9]+\\.[a-zA-Z]+$/)){\n  //     validate = false;\n  //     this.setState({\n  //       mailError:<p style={{color:'red'}}>Invalid email. Please enter valid email.</p>\n  //     })\n  //   }\n  //   if(validate){\n  //     // this.props.LoginAction(this.state.email,this.state.password);\n  //   }\n  // }\n  // setformData(e,value){\n  //   this.setState({\n  //     pwdError:false,\n  //     mailError:''\n  //   })\n  //   if(value === 'pwd'){\n  //     this.setState({\n  //       password: e.target.value\n  //     })}\n  //   else{\n  //     console.log(e.target.value)\n  //     this.setState({\n  //       email: e.target.value\n  //     })\n  //   }\n  //   return;\n  // }\n  // componentDidUpdate(prevState, prevProps){\n  //   if(this.props.isAthenticated){\n  //     window.location.href = '/shop'\n  //   }\n  //   if(this.props.loginStatus){\n  //     if(this.props.loginText === 'invalid'){\n  //       this.setState({\n  //         loginErr: 'email or password is incorrect.'\n  //       })\n  //     }\n  //     else{\n  //       this.setState({\n  //         loginErr: 'email does not exist.'\n  //       })\n  //     }\n  //   }\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"appCapsule\",\n        className: \"pt-0\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-form mt-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section mt-1\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Log in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section mt-1 mb-5\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group boxed\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-wrapper\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"email\",\n                    className: \"form-control\",\n                    id: \"email1\",\n                    placeholder: \"Enter your email address\",\n                    onChange: e => this.setformData(e, 'email')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 23\n                }, this), this.state.mailError]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group boxed\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-wrapper\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"password\",\n                    className: \"form-control\",\n                    id: \"password1\",\n                    placeholder: \"Enter your password\",\n                    autoComplete: \"off\",\n                    onChange: e => this.setformData(e, 'pwd')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 23\n                }, this), this.state.pwdError && /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    color: 'red'\n                  },\n                  children: \"Passsword field cannot be empty\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 47\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 21\n              }, this), console.log(this.props.isAuthenticated, this.props.loginText), this.state.loginErr, this.props.isAuthenticated ? /*#__PURE__*/_jsxDEV(Navigate, {\n                to: \"/anouncement-page\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 49\n              }, this) : this.props.loginText === 'invalid' ? /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: 'red'\n                },\n                children: \"email or password incorrect.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 59\n              }, this) : this.props.loginText === \"not_exist\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: 'red'\n                },\n                children: \"email does not exists.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 59\n              }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-button-group\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-primary btn-block btn-lg\",\n                  onClick: this.handleForm,\n                  children: \"Log in\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n} // const mapStateToProps = state => ({\n// //   loginStatus: state.loginStatus,\n// //   loginText: state.loginText,\n//   isAuthenticated: state.isAuthenticated\n// })\n// const mapDisparchToProps = (dispatch) =>({\n// //   LoginAction : (email,pwd) => dispatch(LoginAction(email,pwd))\n// })\n// export default connect(mapStateToProps, mapDisparchToProps)(Login);","map":{"version":3,"names":["React","Login","Component","constructor","props","state","email","password","mailError","pwdError","loginErr","render","e","setformData","color","console","log","isAuthenticated","loginText","handleForm"],"sources":["/home/tanisha/Desktop/announcement-page/src/components/login.js"],"sourcesContent":["// import React, {useState} from 'react'\nimport React from 'react'\n// import {connect} from \"react-redux\";\n// import {LoginAction} from '../actions'\n// import { Navigate } from 'react-router';\nexport default class Login extends React.Component\n{\n    constructor(props){\n      super(props)\n      this.state = {\n        email:'',\n        password:'',\n        mailError:'',\n        pwdError:false,\n        loginErr:''\n      }\n      // this.handleForm = this.handleForm.bind(this);\n      // this.setformData = this.setformData.bind(this)\n    }\n    // handleForm(event){\n    //   let validate = true;\n    //   event.preventDefault();\n    //   if(this.state.password === ''){\n    //     validate = false;\n    //     this.setState({\n    //       pwdError: true\n    //     })\n    //   }\n    //   if(this.state.email === ''){\n    //     validate = false;\n    //     this.setState({\n    //       mailError:<p style={{color:'red'}}>email field cannot be empty.</p>\n    //     })\n    //   }\n    //   if(!this.state.email.match(/^[A-Za-z0-9+-._]+@[A-Za-z0-9]+\\.[a-zA-Z]+$/)){\n    //     validate = false;\n    //     this.setState({\n    //       mailError:<p style={{color:'red'}}>Invalid email. Please enter valid email.</p>\n    //     })\n    //   }\n    //   if(validate){\n    //     // this.props.LoginAction(this.state.email,this.state.password);\n    //   }\n    // }\n    // setformData(e,value){\n    //   this.setState({\n    //     pwdError:false,\n    //     mailError:''\n    //   })\n    //   if(value === 'pwd'){\n    //     this.setState({\n    //       password: e.target.value\n    //     })}\n    //   else{\n    //     console.log(e.target.value)\n    //     this.setState({\n    //       email: e.target.value\n    //     })\n    //   }\n    //   return;\n    // }\n    // componentDidUpdate(prevState, prevProps){\n    //   if(this.props.isAthenticated){\n    //     window.location.href = '/shop'\n    //   }\n    //   if(this.props.loginStatus){\n    //     if(this.props.loginText === 'invalid'){\n    //       this.setState({\n    //         loginErr: 'email or password is incorrect.'\n    //       })\n    //     }\n    //     else{\n    //       this.setState({\n    //         loginErr: 'email does not exist.'\n    //       })\n    //     }\n    //   }\n    // }\n    render()\n    {\n        return (            \n            <>\n            <div id=\"appCapsule\" className=\"pt-0\">\n              <div className=\"login-form mt-1\">\n                <div className=\"section mt-1\">\n                  {/* <h1>Get started</h1> */}\n                  <h4>Log in</h4>\n                </div>\n                <div className=\"section mt-1 mb-5\">\n                  <form>\n                    <div className=\"form-group boxed\">\n                      <div className=\"input-wrapper\">\n                        <input\n                          type=\"email\"\n                          className=\"form-control\"\n                          id=\"email1\"\n                          placeholder=\"Enter your email address\"\n                          onChange={e=>this.setformData(e,'email')}\n                        />\n                      </div>\n                      {this.state.mailError}\n                    </div>\n                    <div className=\"form-group boxed\">\n                      <div className=\"input-wrapper\">\n                        <input\n                          type=\"password\"\n                          className=\"form-control\"\n                          id=\"password1\"\n                          placeholder=\"Enter your password\"\n                          autoComplete=\"off\"\n                          onChange={e=>this.setformData(e,'pwd')}\n                        />\n                        {/* <i className=\"clear-input\">\n                          <ion-icon name=\"close-circle\" />\n                        </i> */}\n                      </div>\n                      {this.state.pwdError && <p style={{color:'red'}}>Passsword field cannot be empty</p>}\n                    </div>\n                    {/* <div className=\"form-links mt-2\">\n                      <div>\n                        <a href=\"/shop/register\">Register Now</a>\n                      </div>\n                      <div>\n                        <a href=\"/shop/forgot-password\" className=\"text-muted\">\n                          Forgot Password?\n                        </a>\n                      </div>\n                    </div> */}\n                    {console.log(this.props.isAuthenticated, this.props.loginText)}\n                    {this.state.loginErr}\n                    {this.props.isAuthenticated?<Navigate to ='/anouncement-page'/>\n                      :this.props.loginText === 'invalid'?<p style={{color:'red'}}>email or password incorrect.</p>\n                      :this.props.loginText===\"not_exist\"?<p style={{color:'red'}}>email does not exists.</p>:''\n                    }\n                    \n                    <div className=\"form-button-group\">\n                      <button type=\"submit\" className=\"btn btn-primary btn-block btn-lg\" onClick={this.handleForm}>\n                        Log in\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </>\n        )\n    }\n}\n// const mapStateToProps = state => ({\n// //   loginStatus: state.loginStatus,\n// //   loginText: state.loginText,\n//   isAuthenticated: state.isAuthenticated\n// })\n// const mapDisparchToProps = (dispatch) =>({\n// //   LoginAction : (email,pwd) => dispatch(LoginAction(email,pwd))\n// })\n// export default connect(mapStateToProps, mapDisparchToProps)(Login);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}